name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      # - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Install dependencies
        run: npm install

      - name: Check style
        run: npm run eslint

      - name: Check build
        run: npm run build

      - name: Check test
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: testing github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

        run: echo "$GITHUB_CONTEXT"

      - name: Trigger deployment

        if: ${{ !contains(toJson(github.event.commits.*.message), '#skip') && github.event_name == 'push' }}

        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      - name: Deployment Success Notification
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ success() && !contains(toJson(github.event.commits.*.message), '#skip') && github.event_name == 'push' }}
        with:
          severity: info
          text: A new version of Pokedex deployed
          details: Test Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Deployment Failure Notification
        uses: rjstone/discord-webhook-notify@v1

        if: ${{ failure() && !contains(toJson(github.event.commits.*.message), '#skip') && github.event_name == 'push' }}

        with:
          severity: error
          text: Build failed
          details: commit ${{ github.event.push.head }} by pragmatic_aweds
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: Deploy App
      #   if: ${{ github.event_name == 'push' }}
      #   run: flyctl deploy --remote-only
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

        if: ${{ !contains(toJson(github.event.commits.*.message), '#skip') && github.event_name == 'push' }}

      - uses: anothrNick/github-tag-action@v1
        name: Bump version and push tag

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
          DRY_RUN: true
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
